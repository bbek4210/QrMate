exports.id=24,exports.ids=[24],exports.modules={9640:(e,t,a)=>{Promise.resolve().then(a.t.bind(a,2994,23)),Promise.resolve().then(a.t.bind(a,6114,23)),Promise.resolve().then(a.t.bind(a,9727,23)),Promise.resolve().then(a.t.bind(a,9671,23)),Promise.resolve().then(a.t.bind(a,1868,23)),Promise.resolve().then(a.t.bind(a,4759,23))},9758:(e,t,a)=>{Promise.resolve().then(a.bind(a,381)),Promise.resolve().then(a.bind(a,5371)),Promise.resolve().then(a.bind(a,4001))},5371:(e,t,a)=>{"use strict";a.d(t,{QueryProvider:()=>i});var r=a(326),s=a(7577),n=a(2852),o=a(4976);function i({children:e}){let[t]=(0,s.useState)(()=>new n.S);return r.jsx(o.aH,{client:t,children:e})}},4001:(e,t,a)=>{"use strict";a.d(t,{AuthProvider:()=>l,a:()=>d});var r=a(326),s=a(7577),n=a(2018),o=a(381),i=a(8069);let c=(0,s.createContext)(void 0);function l({children:e}){let[t,a]=(0,s.useState)(null),[l,d]=(0,s.useState)(null),[u,g]=(0,s.useState)(!0),m=()=>{a(null),d(null),delete n.Z.defaults.headers.common.Authorization,localStorage.removeItem("qr-mate-access-token"),localStorage.removeItem("qr-mate-user")},w=async(e,t)=>{try{let r=await i.hi.auth.login({email:e,password:t});if("SUCCESS"!==r.status||!r.data)return o.ZP.error(r.message||"Login failed"),!1;{let{access_token:e,refresh_token:t,user:s}=r.data;return a(s),d(e),n.Z.defaults.headers.common.Authorization=`Bearer ${e}`,localStorage.setItem("qr-mate-access-token",e),localStorage.setItem("qr-mate-refresh-token",t),localStorage.setItem("qr-mate-user",JSON.stringify(s)),o.ZP.success("Login successful!"),!0}}catch(t){console.error("Login error:",t);let e=t.response?.data?.message||"Login failed. Please try again.";return o.ZP.error(e),!1}},p=async e=>{try{let t=await i.hi.auth.signup(e);if("SUCCESS"!==t.status||!t.data)return o.ZP.error(t.message||"Registration failed"),!1;{let{access_token:e,refresh_token:r,user:s}=t.data;return a(s),d(e),n.Z.defaults.headers.common.Authorization=`Bearer ${e}`,localStorage.setItem("qr-mate-access-token",e),localStorage.setItem("qr-mate-refresh-token",r),localStorage.setItem("qr-mate-user",JSON.stringify(s)),o.ZP.success("Account created successfully!"),!0}}catch(t){console.error("Signup error:",t);let e=t.response?.data?.message||"Registration failed. Please try again.";return o.ZP.error(e),!1}};return r.jsx(c.Provider,{value:{user:t,login:w,signup:p,logout:()=>{m(),o.ZP.success("Logged out successfully")},isLoading:u,accessToken:l},children:e})}function d(){let e=(0,s.useContext)(c);if(void 0===e)throw Error("useAuth must be used within an AuthProvider");return e}},8069:(e,t,a)=>{"use strict";a.d(t,{hi:()=>s});var r=a(2018);let s={auth:{login:async e=>(await r.Z.post("/auth/login/",e)).data,signup:async e=>(await r.Z.post("/auth/signup/",e)).data,test:async()=>(await r.Z.get("/test/")).data},user:{getProfile:async()=>(await r.Z.get("/web/profile/")).data,updateProfile:async e=>(await r.Z.put("/web/profile/",e)).data,getPositions:async()=>(await r.Z.get("/positions/")).data,sendFeedback:async e=>(await r.Z.post("/userfeedback/",e,{headers:{"Content-Type":"multipart/form-data"}})).data,getFields:async()=>(await r.Z.get("/fields/")).data},events:{createOrJoinEvent:async e=>(await r.Z.post("/event/",e)).data,getAdminEvents:async()=>(await r.Z.get("/admin_event/")).data,joinEventByCode:async e=>(await r.Z.post(`/event/join/${e}/`)).data,getAttendees:async e=>{let t=e?`?event=${e}`:"";return(await r.Z.get(`/attendees/${t}`)).data}},networking:{createNetwork:async e=>(await r.Z.post("/create-a-network/",e)).data,getNetworksAndConnections:async e=>{let t=new URLSearchParams;return e&&Object.entries(e).forEach(([e,a])=>{a&&t.append(e,a.toString())}),(await r.Z.get(`/networks_and_connnections/?${t.toString()}`)).data},getNetworkDetails:async e=>(await r.Z.get(`/networks_and_connnections/${e}/`)).data,getConnectedUserDetails:async e=>(await r.Z.get(`/networks_and_connnections/${e}/`)).data,getNetworkInformation:async e=>(await r.Z.get(`/get-network-information/${e}/`)).data,saveNetworkInformation:async e=>(await r.Z.post("/save-network-information/",e)).data,sendNetworkingRequest:async e=>(await r.Z.post("/networking/send-request/",e)).data,getReceivedRequests:async()=>(await r.Z.get("/networking/received-requests/")).data,getSentRequests:async()=>(await r.Z.get("/networking/sent-requests/")).data,respondToRequest:async(e,t,a)=>(await r.Z.post(`/networking/respond/${e}/`,{response:t,message:a})).data,getMyConnections:async()=>(await r.Z.get("/networking/connections/")).data,browseUsers:async e=>{let t=new URLSearchParams;return e&&Object.entries(e).forEach(([e,a])=>{a&&t.append(e,a.toString())}),(await r.Z.get(`/users/browse/?${t.toString()}`)).data},filterUsers:async e=>(await r.Z.post("/users/filter/",e)).data,getNotificationCount:async()=>(await r.Z.get("/notifications/count/")).data,reportSpam:async e=>(await r.Z.post("/networking/spam-reports/",e)).data},wallet:{connectWallet:async e=>(await r.Z.post("/wallet/connect/",e)).data,getTransactionStatus:async e=>(await r.Z.get(`/transaction/status/${e}/`)).data,mockTransaction:async e=>(await r.Z.post("/transaction/mock/",e)).data,debugWallet:async()=>(await r.Z.get("/wallet/debug/")).data},file:{uploadFile:async(e,t)=>{let a=new FormData;return a.append("file",e),a.append("key",t),(await r.Z.post("/upload/file/",a,{headers:{"Content-Type":"multipart/form-data"}})).data}},health:{networkingHealthCheck:async()=>(await r.Z.get("/networking/health-check/")).data,networkingDebug:async()=>(await r.Z.get("/networking/debug/")).data}}},2018:(e,t,a)=>{"use strict";a.d(t,{$:()=>s,Z:()=>o});var r=a(4099);async function s(e){try{await r.Z.post("https://discord.com/api/webhooks/1365007210907828338/02w2lA9oEm8hPZGjpClx4ZJtF55fF7Xu3NvMFvxuDlA5LxVtx7pBKJh8IgHx3ZrP8xna",{content:e})}catch(e){console.error("Failed to send log to Discord:",e)}}let n=r.Z.create({baseURL:"http://localhost:8000/api/v1",headers:{"Content-Type":"application/json"}});n.interceptors.request.use(async e=>{let t=localStorage.getItem("qr-mate-access-token");return t&&(e.headers.Authorization=`Bearer ${t}`),s([`🔄 **API REQUEST**`,`**Method**: ${e.method?.toUpperCase()}`,`**URL**: ${e.baseURL}${e.url}`,`**Headers**:
\`\`\`json
${JSON.stringify(e.headers.Authorization,null,2)}
\`\`\``,e.data?`**Body**:
\`\`\`json
${JSON.stringify(e.data,null,2)}
\`\`\``:"**Body**: _empty_"].join("\n")),e},e=>(s(`⚠️ Request Setup Error:
\`\`\`
${e.message}
\`\`\``),Promise.reject(e))),n.interceptors.response.use(e=>e,async e=>{let{config:t,response:a}=e;return console.log({response:a}),a?.status===401&&a?.data?.code==="token_not_valid"&&(localStorage.removeItem("qr-mate-access-token"),localStorage.removeItem("qr-mate-refresh-token"),localStorage.removeItem("qr-mate-user")),s(`❌ **API ERROR**
**Method**: ${t?.method?.toUpperCase()}
**URL**: ${t?.baseURL}${t?.url}
**Status**: ${a?.status||"N/A"}
**Status Text**: ${a?.statusText||"N/A"}
**Response Data**:
\`\`\`json
${JSON.stringify(a?.data||e.message,null,2)}
\`\`\``),Promise.reject(e)});let o=n},4067:(e,t,a)=>{"use strict";a.r(t),a.d(t,{default:()=>u,metadata:()=>d});var r=a(9510),s=a(5384),n=a.n(s);a(4315);var o=a(9125),i=a(8570);let c=(0,i.createProxy)(String.raw`C:\Users\Lenovo\OneDrive\Desktop\Programming\qrmate\client\src\components\Provider\QueryClientProvider.tsx#QueryProvider`),l=(0,i.createProxy)(String.raw`C:\Users\Lenovo\OneDrive\Desktop\Programming\qrmate\client\src\contexts\AuthContext.tsx#AuthProvider`);(0,i.createProxy)(String.raw`C:\Users\Lenovo\OneDrive\Desktop\Programming\qrmate\client\src\contexts\AuthContext.tsx#useAuth`);let d={title:"QR Mate - Connect with People",description:"A modern networking app to connect with people through QR codes"};function u({children:e}){return r.jsx("html",{lang:"en",children:(0,r.jsxs)("body",{className:n().className,children:[r.jsx(l,{children:r.jsx(c,{children:e})}),r.jsx(o.x7,{})]})})}},4315:()=>{}};